ARM GAS  /tmp/cc0INIgo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	NMI_Handler
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
ARM GAS  /tmp/cc0INIgo.s 			page 2


  31:Src/stm32f3xx_it.c ****   ******************************************************************************
  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f3xx_it.c **** 
  44:Src/stm32f3xx_it.c **** /******************************************************************************/
  45:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  46:Src/stm32f3xx_it.c **** /******************************************************************************/
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /**
  49:Src/stm32f3xx_it.c **** * @brief This function handles Non maskable interrupt.
  50:Src/stm32f3xx_it.c **** */
  51:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  52:Src/stm32f3xx_it.c **** {
  29              		.loc 1 52 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  53:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  56:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  59:Src/stm32f3xx_it.c **** }
  41              		.loc 1 59 0
  42 0004 BD46     		mov	sp, r7
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 13
  45              		@ sp needed
  46 0006 5DF8047B 		ldr	r7, [sp], #4
  47              	.LCFI3:
  48              		.cfi_restore 7
  49              		.cfi_def_cfa_offset 0
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE123:
  54              		.section	.text.HardFault_Handler,"ax",%progbits
  55              		.align	2
  56              		.global	HardFault_Handler
  57              		.thumb
ARM GAS  /tmp/cc0INIgo.s 			page 3


  58              		.thumb_func
  60              	HardFault_Handler:
  61              	.LFB124:
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /**
  62:Src/stm32f3xx_it.c **** * @brief This function handles Hard fault interrupt.
  63:Src/stm32f3xx_it.c **** */
  64:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  65:Src/stm32f3xx_it.c **** {
  62              		.loc 1 65 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              	.LCFI4:
  69              		.cfi_def_cfa_offset 4
  70              		.cfi_offset 7, -4
  71 0002 00AF     		add	r7, sp, #0
  72              	.LCFI5:
  73              		.cfi_def_cfa_register 7
  74              	.L3:
  66:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  67:Src/stm32f3xx_it.c **** 
  68:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  69:Src/stm32f3xx_it.c ****   while (1)
  70:Src/stm32f3xx_it.c ****   {
  71:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  72:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  73:Src/stm32f3xx_it.c ****   }
  75              		.loc 1 73 0 discriminator 1
  76 0004 FEE7     		b	.L3
  77              		.cfi_endproc
  78              	.LFE124:
  80 0006 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  81              		.align	2
  82              		.global	MemManage_Handler
  83              		.thumb
  84              		.thumb_func
  86              	MemManage_Handler:
  87              	.LFB125:
  74:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  77:Src/stm32f3xx_it.c **** }
  78:Src/stm32f3xx_it.c **** 
  79:Src/stm32f3xx_it.c **** /**
  80:Src/stm32f3xx_it.c **** * @brief This function handles Memory management fault.
  81:Src/stm32f3xx_it.c **** */
  82:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
  83:Src/stm32f3xx_it.c **** {
  88              		.loc 1 83 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc0INIgo.s 			page 4


  94              	.LCFI6:
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 7, -4
  97 0002 00AF     		add	r7, sp, #0
  98              	.LCFI7:
  99              		.cfi_def_cfa_register 7
 100              	.L5:
  84:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  85:Src/stm32f3xx_it.c **** 
  86:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  87:Src/stm32f3xx_it.c ****   while (1)
  88:Src/stm32f3xx_it.c ****   {
  89:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  90:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  91:Src/stm32f3xx_it.c ****   }
 101              		.loc 1 91 0 discriminator 1
 102 0004 FEE7     		b	.L5
 103              		.cfi_endproc
 104              	.LFE125:
 106 0006 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 107              		.align	2
 108              		.global	BusFault_Handler
 109              		.thumb
 110              		.thumb_func
 112              	BusFault_Handler:
 113              	.LFB126:
  92:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  93:Src/stm32f3xx_it.c **** 
  94:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  95:Src/stm32f3xx_it.c **** }
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c **** /**
  98:Src/stm32f3xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  99:Src/stm32f3xx_it.c **** */
 100:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 101:Src/stm32f3xx_it.c **** {
 114              		.loc 1 101 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              	.LCFI8:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 00AF     		add	r7, sp, #0
 124              	.LCFI9:
 125              		.cfi_def_cfa_register 7
 126              	.L7:
 102:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 103:Src/stm32f3xx_it.c **** 
 104:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 105:Src/stm32f3xx_it.c ****   while (1)
 106:Src/stm32f3xx_it.c ****   {
 107:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 108:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 109:Src/stm32f3xx_it.c ****   }
ARM GAS  /tmp/cc0INIgo.s 			page 5


 127              		.loc 1 109 0 discriminator 1
 128 0004 FEE7     		b	.L7
 129              		.cfi_endproc
 130              	.LFE126:
 132 0006 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 133              		.align	2
 134              		.global	UsageFault_Handler
 135              		.thumb
 136              		.thumb_func
 138              	UsageFault_Handler:
 139              	.LFB127:
 110:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 111:Src/stm32f3xx_it.c **** 
 112:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 113:Src/stm32f3xx_it.c **** }
 114:Src/stm32f3xx_it.c **** 
 115:Src/stm32f3xx_it.c **** /**
 116:Src/stm32f3xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 117:Src/stm32f3xx_it.c **** */
 118:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 119:Src/stm32f3xx_it.c **** {
 140              		.loc 1 119 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI10:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              	.LCFI11:
 151              		.cfi_def_cfa_register 7
 152              	.L9:
 120:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 121:Src/stm32f3xx_it.c **** 
 122:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 123:Src/stm32f3xx_it.c ****   while (1)
 124:Src/stm32f3xx_it.c ****   {
 125:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 126:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 127:Src/stm32f3xx_it.c ****   }
 153              		.loc 1 127 0 discriminator 1
 154 0004 FEE7     		b	.L9
 155              		.cfi_endproc
 156              	.LFE127:
 158 0006 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 159              		.align	2
 160              		.global	SVC_Handler
 161              		.thumb
 162              		.thumb_func
 164              	SVC_Handler:
 165              	.LFB128:
 128:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 131:Src/stm32f3xx_it.c **** }
ARM GAS  /tmp/cc0INIgo.s 			page 6


 132:Src/stm32f3xx_it.c **** 
 133:Src/stm32f3xx_it.c **** /**
 134:Src/stm32f3xx_it.c **** * @brief This function handles System service call via SWI instruction.
 135:Src/stm32f3xx_it.c **** */
 136:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 137:Src/stm32f3xx_it.c **** {
 166              		.loc 1 137 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              	.LCFI12:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 00AF     		add	r7, sp, #0
 176              	.LCFI13:
 177              		.cfi_def_cfa_register 7
 138:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 139:Src/stm32f3xx_it.c **** 
 140:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 141:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 142:Src/stm32f3xx_it.c **** 
 143:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 144:Src/stm32f3xx_it.c **** }
 178              		.loc 1 144 0
 179 0004 BD46     		mov	sp, r7
 180              	.LCFI14:
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 0006 5DF8047B 		ldr	r7, [sp], #4
 184              	.LCFI15:
 185              		.cfi_restore 7
 186              		.cfi_def_cfa_offset 0
 187 000a 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE128:
 191              		.section	.text.DebugMon_Handler,"ax",%progbits
 192              		.align	2
 193              		.global	DebugMon_Handler
 194              		.thumb
 195              		.thumb_func
 197              	DebugMon_Handler:
 198              	.LFB129:
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c **** /**
 147:Src/stm32f3xx_it.c **** * @brief This function handles Debug monitor.
 148:Src/stm32f3xx_it.c **** */
 149:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 150:Src/stm32f3xx_it.c **** {
 199              		.loc 1 150 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              	.LCFI16:
ARM GAS  /tmp/cc0INIgo.s 			page 7


 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 00AF     		add	r7, sp, #0
 209              	.LCFI17:
 210              		.cfi_def_cfa_register 7
 151:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f3xx_it.c **** 
 156:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f3xx_it.c **** }
 211              		.loc 1 157 0
 212 0004 BD46     		mov	sp, r7
 213              	.LCFI18:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0006 5DF8047B 		ldr	r7, [sp], #4
 217              	.LCFI19:
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 000a 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE129:
 224              		.section	.text.PendSV_Handler,"ax",%progbits
 225              		.align	2
 226              		.global	PendSV_Handler
 227              		.thumb
 228              		.thumb_func
 230              	PendSV_Handler:
 231              	.LFB130:
 158:Src/stm32f3xx_it.c **** 
 159:Src/stm32f3xx_it.c **** /**
 160:Src/stm32f3xx_it.c **** * @brief This function handles Pendable request for system service.
 161:Src/stm32f3xx_it.c **** */
 162:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 163:Src/stm32f3xx_it.c **** {
 232              		.loc 1 163 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237 0000 80B4     		push	{r7}
 238              	.LCFI20:
 239              		.cfi_def_cfa_offset 4
 240              		.cfi_offset 7, -4
 241 0002 00AF     		add	r7, sp, #0
 242              	.LCFI21:
 243              		.cfi_def_cfa_register 7
 164:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 165:Src/stm32f3xx_it.c **** 
 166:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 167:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 168:Src/stm32f3xx_it.c **** 
 169:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 170:Src/stm32f3xx_it.c **** }
 244              		.loc 1 170 0
ARM GAS  /tmp/cc0INIgo.s 			page 8


 245 0004 BD46     		mov	sp, r7
 246              	.LCFI22:
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 0006 5DF8047B 		ldr	r7, [sp], #4
 250              	.LCFI23:
 251              		.cfi_restore 7
 252              		.cfi_def_cfa_offset 0
 253 000a 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE130:
 257              		.section	.text.SysTick_Handler,"ax",%progbits
 258              		.align	2
 259              		.global	SysTick_Handler
 260              		.thumb
 261              		.thumb_func
 263              	SysTick_Handler:
 264              	.LFB131:
 171:Src/stm32f3xx_it.c **** 
 172:Src/stm32f3xx_it.c **** /**
 173:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
 174:Src/stm32f3xx_it.c **** */
 175:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 176:Src/stm32f3xx_it.c **** {
 265              		.loc 1 176 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              	.LCFI24:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 00AF     		add	r7, sp, #0
 275              	.LCFI25:
 276              		.cfi_def_cfa_register 7
 177:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 178:Src/stm32f3xx_it.c **** 
 179:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 180:Src/stm32f3xx_it.c ****   HAL_IncTick();
 277              		.loc 1 180 0
 278 0004 FFF7FEFF 		bl	HAL_IncTick
 181:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
 279              		.loc 1 181 0
 280 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 182:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 185:Src/stm32f3xx_it.c **** }
 281              		.loc 1 185 0
 282 000c 80BD     		pop	{r7, pc}
 283              		.cfi_endproc
 284              	.LFE131:
 286 000e 00BF     		.text
 287              	.Letext0:
 288              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 289              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/cc0INIgo.s 			page 9


 290              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cc0INIgo.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/cc0INIgo.s:21     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc0INIgo.s:55     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:60     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc0INIgo.s:81     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:86     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc0INIgo.s:107    .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:112    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc0INIgo.s:133    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:138    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc0INIgo.s:159    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:164    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc0INIgo.s:192    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:197    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc0INIgo.s:225    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:230    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc0INIgo.s:258    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc0INIgo.s:263    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
