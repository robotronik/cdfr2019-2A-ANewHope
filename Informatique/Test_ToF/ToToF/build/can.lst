ARM GAS  /tmp/cc3ybh2l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"can.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	hcan,40,4
  21              		.section	.rodata
  22              		.align	2
  23              	.LC0:
  24 0000 5372632F 		.ascii	"Src/can.c\000"
  24      63616E2E 
  24      6300
  25              		.section	.text.MX_CAN_Init,"ax",%progbits
  26              		.align	2
  27              		.global	MX_CAN_Init
  28              		.thumb
  29              		.thumb_func
  31              	MX_CAN_Init:
  32              	.LFB123:
  33              		.file 1 "Src/can.c"
   1:Src/can.c     **** /**
   2:Src/can.c     ****   ******************************************************************************
   3:Src/can.c     ****   * File Name          : CAN.c
   4:Src/can.c     ****   * Description        : This file provides code for the configuration
   5:Src/can.c     ****   *                      of the CAN instances.
   6:Src/can.c     ****   ******************************************************************************
   7:Src/can.c     ****   ** This notice applies to any and all portions of this file
   8:Src/can.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/can.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/can.c     ****   * inserted by the user or by software development tools
  11:Src/can.c     ****   * are owned by their respective copyright owners.
  12:Src/can.c     ****   *
  13:Src/can.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/can.c     ****   *
  15:Src/can.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/can.c     ****   * are permitted provided that the following conditions are met:
  17:Src/can.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/can.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/can.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/can.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/can.c     ****   *      and/or other materials provided with the distribution.
  22:Src/can.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/can.c     ****   *      may be used to endorse or promote products derived from this software
ARM GAS  /tmp/cc3ybh2l.s 			page 2


  24:Src/can.c     ****   *      without specific prior written permission.
  25:Src/can.c     ****   *
  26:Src/can.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/can.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/can.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/can.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/can.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/can.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/can.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/can.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/can.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/can.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/can.c     ****   *
  37:Src/can.c     ****   ******************************************************************************
  38:Src/can.c     ****   */
  39:Src/can.c     **** 
  40:Src/can.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/can.c     **** #include "can.h"
  42:Src/can.c     **** 
  43:Src/can.c     **** #include "gpio.h"
  44:Src/can.c     **** 
  45:Src/can.c     **** /* USER CODE BEGIN 0 */
  46:Src/can.c     **** 
  47:Src/can.c     **** /* USER CODE END 0 */
  48:Src/can.c     **** 
  49:Src/can.c     **** CAN_HandleTypeDef hcan;
  50:Src/can.c     **** 
  51:Src/can.c     **** /* CAN init function */
  52:Src/can.c     **** void MX_CAN_Init(void)
  53:Src/can.c     **** {
  34              		.loc 1 53 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
  45              		.cfi_def_cfa_register 7
  54:Src/can.c     **** 
  55:Src/can.c     ****   hcan.Instance = CAN;
  46              		.loc 1 55 0
  47 0004 174B     		ldr	r3, .L3
  48 0006 184A     		ldr	r2, .L3+4
  49 0008 1A60     		str	r2, [r3]
  56:Src/can.c     ****   hcan.Init.Prescaler = 16;
  50              		.loc 1 56 0
  51 000a 164B     		ldr	r3, .L3
  52 000c 1022     		movs	r2, #16
  53 000e 5A60     		str	r2, [r3, #4]
  57:Src/can.c     ****   hcan.Init.Mode = CAN_MODE_NORMAL;
  54              		.loc 1 57 0
  55 0010 144B     		ldr	r3, .L3
  56 0012 0022     		movs	r2, #0
ARM GAS  /tmp/cc3ybh2l.s 			page 3


  57 0014 9A60     		str	r2, [r3, #8]
  58:Src/can.c     ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
  58              		.loc 1 58 0
  59 0016 134B     		ldr	r3, .L3
  60 0018 0022     		movs	r2, #0
  61 001a DA60     		str	r2, [r3, #12]
  59:Src/can.c     ****   hcan.Init.TimeSeg1 = CAN_BS1_1TQ;
  62              		.loc 1 59 0
  63 001c 114B     		ldr	r3, .L3
  64 001e 0022     		movs	r2, #0
  65 0020 1A61     		str	r2, [r3, #16]
  60:Src/can.c     ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
  66              		.loc 1 60 0
  67 0022 104B     		ldr	r3, .L3
  68 0024 0022     		movs	r2, #0
  69 0026 5A61     		str	r2, [r3, #20]
  61:Src/can.c     ****   hcan.Init.TimeTriggeredMode = DISABLE;
  70              		.loc 1 61 0
  71 0028 0E4B     		ldr	r3, .L3
  72 002a 0022     		movs	r2, #0
  73 002c 1A76     		strb	r2, [r3, #24]
  62:Src/can.c     ****   hcan.Init.AutoBusOff = DISABLE;
  74              		.loc 1 62 0
  75 002e 0D4B     		ldr	r3, .L3
  76 0030 0022     		movs	r2, #0
  77 0032 5A76     		strb	r2, [r3, #25]
  63:Src/can.c     ****   hcan.Init.AutoWakeUp = DISABLE;
  78              		.loc 1 63 0
  79 0034 0B4B     		ldr	r3, .L3
  80 0036 0022     		movs	r2, #0
  81 0038 9A76     		strb	r2, [r3, #26]
  64:Src/can.c     ****   hcan.Init.AutoRetransmission = DISABLE;
  82              		.loc 1 64 0
  83 003a 0A4B     		ldr	r3, .L3
  84 003c 0022     		movs	r2, #0
  85 003e DA76     		strb	r2, [r3, #27]
  65:Src/can.c     ****   hcan.Init.ReceiveFifoLocked = DISABLE;
  86              		.loc 1 65 0
  87 0040 084B     		ldr	r3, .L3
  88 0042 0022     		movs	r2, #0
  89 0044 1A77     		strb	r2, [r3, #28]
  66:Src/can.c     ****   hcan.Init.TransmitFifoPriority = DISABLE;
  90              		.loc 1 66 0
  91 0046 074B     		ldr	r3, .L3
  92 0048 0022     		movs	r2, #0
  93 004a 5A77     		strb	r2, [r3, #29]
  67:Src/can.c     ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
  94              		.loc 1 67 0
  95 004c 0548     		ldr	r0, .L3
  96 004e FFF7FEFF 		bl	HAL_CAN_Init
  97 0052 0346     		mov	r3, r0
  98 0054 002B     		cmp	r3, #0
  99 0056 03D0     		beq	.L1
  68:Src/can.c     ****   {
  69:Src/can.c     ****     _Error_Handler(__FILE__, __LINE__);
 100              		.loc 1 69 0
 101 0058 0448     		ldr	r0, .L3+8
ARM GAS  /tmp/cc3ybh2l.s 			page 4


 102 005a 4521     		movs	r1, #69
 103 005c FFF7FEFF 		bl	_Error_Handler
 104              	.L1:
  70:Src/can.c     ****   }
  71:Src/can.c     **** 
  72:Src/can.c     **** }
 105              		.loc 1 72 0
 106 0060 80BD     		pop	{r7, pc}
 107              	.L4:
 108 0062 00BF     		.align	2
 109              	.L3:
 110 0064 00000000 		.word	hcan
 111 0068 00640040 		.word	1073767424
 112 006c 00000000 		.word	.LC0
 113              		.cfi_endproc
 114              	.LFE123:
 116              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 117              		.align	2
 118              		.global	HAL_CAN_MspInit
 119              		.thumb
 120              		.thumb_func
 122              	HAL_CAN_MspInit:
 123              	.LFB124:
  73:Src/can.c     **** 
  74:Src/can.c     **** void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
  75:Src/can.c     **** {
 124              		.loc 1 75 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 32
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 88B0     		sub	sp, sp, #32
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 40
 136 0004 00AF     		add	r7, sp, #0
 137              	.LCFI4:
 138              		.cfi_def_cfa_register 7
 139 0006 7860     		str	r0, [r7, #4]
  76:Src/can.c     **** 
  77:Src/can.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  78:Src/can.c     ****   if(canHandle->Instance==CAN)
 140              		.loc 1 78 0
 141 0008 7B68     		ldr	r3, [r7, #4]
 142 000a 1B68     		ldr	r3, [r3]
 143 000c 114A     		ldr	r2, .L7
 144 000e 9342     		cmp	r3, r2
 145 0010 1DD1     		bne	.L5
 146              	.LBB2:
  79:Src/can.c     ****   {
  80:Src/can.c     ****   /* USER CODE BEGIN CAN_MspInit 0 */
  81:Src/can.c     **** 
  82:Src/can.c     ****   /* USER CODE END CAN_MspInit 0 */
  83:Src/can.c     ****     /* CAN clock enable */
ARM GAS  /tmp/cc3ybh2l.s 			page 5


  84:Src/can.c     ****     __HAL_RCC_CAN1_CLK_ENABLE();
 147              		.loc 1 84 0
 148 0012 114A     		ldr	r2, .L7+4
 149 0014 104B     		ldr	r3, .L7+4
 150 0016 DB69     		ldr	r3, [r3, #28]
 151 0018 43F00073 		orr	r3, r3, #33554432
 152 001c D361     		str	r3, [r2, #28]
 153 001e 0E4B     		ldr	r3, .L7+4
 154 0020 DB69     		ldr	r3, [r3, #28]
 155 0022 03F00073 		and	r3, r3, #33554432
 156 0026 BB60     		str	r3, [r7, #8]
 157 0028 BB68     		ldr	r3, [r7, #8]
 158              	.LBE2:
  85:Src/can.c     ****   
  86:Src/can.c     ****     /**CAN GPIO Configuration    
  87:Src/can.c     ****     PA11     ------> CAN_RX
  88:Src/can.c     ****     PA12     ------> CAN_TX 
  89:Src/can.c     ****     */
  90:Src/can.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 159              		.loc 1 90 0
 160 002a 4FF4C053 		mov	r3, #6144
 161 002e FB60     		str	r3, [r7, #12]
  91:Src/can.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 162              		.loc 1 91 0
 163 0030 0223     		movs	r3, #2
 164 0032 3B61     		str	r3, [r7, #16]
  92:Src/can.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 165              		.loc 1 92 0
 166 0034 0023     		movs	r3, #0
 167 0036 7B61     		str	r3, [r7, #20]
  93:Src/can.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 168              		.loc 1 93 0
 169 0038 0323     		movs	r3, #3
 170 003a BB61     		str	r3, [r7, #24]
  94:Src/can.c     ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN;
 171              		.loc 1 94 0
 172 003c 0923     		movs	r3, #9
 173 003e FB61     		str	r3, [r7, #28]
  95:Src/can.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 174              		.loc 1 95 0
 175 0040 07F10C03 		add	r3, r7, #12
 176 0044 4FF09040 		mov	r0, #1207959552
 177 0048 1946     		mov	r1, r3
 178 004a FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.L5:
  96:Src/can.c     **** 
  97:Src/can.c     ****   /* USER CODE BEGIN CAN_MspInit 1 */
  98:Src/can.c     **** 
  99:Src/can.c     ****   /* USER CODE END CAN_MspInit 1 */
 100:Src/can.c     ****   }
 101:Src/can.c     **** }
 180              		.loc 1 101 0
 181 004e 2037     		adds	r7, r7, #32
 182              	.LCFI5:
 183              		.cfi_def_cfa_offset 8
 184 0050 BD46     		mov	sp, r7
 185              	.LCFI6:
ARM GAS  /tmp/cc3ybh2l.s 			page 6


 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 0052 80BD     		pop	{r7, pc}
 189              	.L8:
 190              		.align	2
 191              	.L7:
 192 0054 00640040 		.word	1073767424
 193 0058 00100240 		.word	1073876992
 194              		.cfi_endproc
 195              	.LFE124:
 197              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 198              		.align	2
 199              		.global	HAL_CAN_MspDeInit
 200              		.thumb
 201              		.thumb_func
 203              	HAL_CAN_MspDeInit:
 204              	.LFB125:
 102:Src/can.c     **** 
 103:Src/can.c     **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
 104:Src/can.c     **** {
 205              		.loc 1 104 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              	.LCFI7:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 14, -4
 214 0002 82B0     		sub	sp, sp, #8
 215              	.LCFI8:
 216              		.cfi_def_cfa_offset 16
 217 0004 00AF     		add	r7, sp, #0
 218              	.LCFI9:
 219              		.cfi_def_cfa_register 7
 220 0006 7860     		str	r0, [r7, #4]
 105:Src/can.c     **** 
 106:Src/can.c     ****   if(canHandle->Instance==CAN)
 221              		.loc 1 106 0
 222 0008 7B68     		ldr	r3, [r7, #4]
 223 000a 1B68     		ldr	r3, [r3]
 224 000c 084A     		ldr	r2, .L11
 225 000e 9342     		cmp	r3, r2
 226 0010 0BD1     		bne	.L9
 107:Src/can.c     ****   {
 108:Src/can.c     ****   /* USER CODE BEGIN CAN_MspDeInit 0 */
 109:Src/can.c     **** 
 110:Src/can.c     ****   /* USER CODE END CAN_MspDeInit 0 */
 111:Src/can.c     ****     /* Peripheral clock disable */
 112:Src/can.c     ****     __HAL_RCC_CAN1_CLK_DISABLE();
 227              		.loc 1 112 0
 228 0012 084A     		ldr	r2, .L11+4
 229 0014 074B     		ldr	r3, .L11+4
 230 0016 DB69     		ldr	r3, [r3, #28]
 231 0018 23F00073 		bic	r3, r3, #33554432
 232 001c D361     		str	r3, [r2, #28]
 113:Src/can.c     ****   
ARM GAS  /tmp/cc3ybh2l.s 			page 7


 114:Src/can.c     ****     /**CAN GPIO Configuration    
 115:Src/can.c     ****     PA11     ------> CAN_RX
 116:Src/can.c     ****     PA12     ------> CAN_TX 
 117:Src/can.c     ****     */
 118:Src/can.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 233              		.loc 1 118 0
 234 001e 4FF09040 		mov	r0, #1207959552
 235 0022 4FF4C051 		mov	r1, #6144
 236 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 237              	.L9:
 119:Src/can.c     **** 
 120:Src/can.c     ****   /* USER CODE BEGIN CAN_MspDeInit 1 */
 121:Src/can.c     **** 
 122:Src/can.c     ****   /* USER CODE END CAN_MspDeInit 1 */
 123:Src/can.c     ****   }
 124:Src/can.c     **** } 
 238              		.loc 1 124 0
 239 002a 0837     		adds	r7, r7, #8
 240              	.LCFI10:
 241              		.cfi_def_cfa_offset 8
 242 002c BD46     		mov	sp, r7
 243              	.LCFI11:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 002e 80BD     		pop	{r7, pc}
 247              	.L12:
 248              		.align	2
 249              	.L11:
 250 0030 00640040 		.word	1073767424
 251 0034 00100240 		.word	1073876992
 252              		.cfi_endproc
 253              	.LFE125:
 255              		.text
 256              	.Letext0:
 257              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 258              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 259              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 260              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 261              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 262              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 263              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 264              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cc3ybh2l.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
                            *COM*:0000000000000028 hcan
     /tmp/cc3ybh2l.s:22     .rodata:0000000000000000 $d
     /tmp/cc3ybh2l.s:26     .text.MX_CAN_Init:0000000000000000 $t
     /tmp/cc3ybh2l.s:31     .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/cc3ybh2l.s:110    .text.MX_CAN_Init:0000000000000064 $d
     /tmp/cc3ybh2l.s:117    .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/cc3ybh2l.s:122    .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/cc3ybh2l.s:192    .text.HAL_CAN_MspInit:0000000000000054 $d
     /tmp/cc3ybh2l.s:198    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/cc3ybh2l.s:203    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/cc3ybh2l.s:250    .text.HAL_CAN_MspDeInit:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
