ARM GAS  /tmp/ccvqLdAx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	uwTick,4,4
  21              		.global	uwTickPrio
  22              		.section	.data.uwTickPrio,"aw",%progbits
  23              		.align	2
  26              	uwTickPrio:
  27 0000 10000000 		.word	16
  28              		.global	uwTickFreq
  29              		.section	.data.uwTickFreq,"aw",%progbits
  32              	uwTickFreq:
  33 0000 01       		.byte	1
  34              		.section	.text.HAL_Init,"ax",%progbits
  35              		.align	2
  36              		.global	HAL_Init
  37              		.thumb
  38              		.thumb_func
  40              	HAL_Init:
  41              	.LFB123:
  42              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @file    stm32f3xx_hal.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @verbatim
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   @endverbatim
ARM GAS  /tmp/ccvqLdAx.s 			page 2


  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @attention
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   ******************************************************************************  
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #include "stm32f3xx_hal.h"
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @addtogroup STM32F3xx_HAL_Driver
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Private Constants
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  * @brief STM32F3xx HAL Driver version number V1.5.2
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB1   (0x05U) /*!< [23:16] sub1 version */
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define __STM32F3xx_HAL_VERSION         ((__STM32F3xx_HAL_VERSION_MAIN << 24U)\
ARM GAS  /tmp/ccvqLdAx.s 			page 3


  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB1 << 16U)\
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_SUB2 << 8U )\
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                         |(__STM32F3xx_HAL_VERSION_RC))
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Variables HAL Exported Variables
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __IO uint32_t uwTick;
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****               ##### Initialization and de-initialization functions #####
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           and the backup domain when enabled.
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) de-Initializes common part of the HAL.
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****           Tick interrupt priority. 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              handled in milliseconds basis.
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             ISR process will be blocked. 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
ARM GAS  /tmp/ccvqLdAx.s 			page 4


 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the Flash prefetch, 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Configures time base source, NVIC and Low level hardware
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called at the beginning of program after reset and before 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         the clock configuration
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *             
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The Systick configuration is based on HSI clock, as HSI is the clock
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used after a system Reset and the NVIC configuration is set to Priority group 4 
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *            
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The time base configuration is based on MSI clock when exting from Reset.
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Once done, time base tick start incrementing.
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         In the default implementation,Systick is used as source of time base.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  43              		.loc 1 155 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              	.LCFI1:
  54              		.cfi_def_cfa_register 7
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure Flash prefetch */
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  55              		.loc 1 158 0
  56 0004 084A     		ldr	r2, .L3
  57 0006 084B     		ldr	r3, .L3
  58 0008 1B68     		ldr	r3, [r3]
  59 000a 43F01003 		orr	r3, r3, #16
  60 000e 1360     		str	r3, [r2]
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** #endif /* PREFETCH_ENABLE */
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Set Interrupt Group Priority */
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  61              		.loc 1 162 0
  62 0010 0320     		movs	r0, #3
  63 0012 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  64              		.loc 1 165 0
  65 0016 0020     		movs	r0, #0
  66 0018 FFF7FEFF 		bl	HAL_InitTick
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Init the low level hardware */
ARM GAS  /tmp/ccvqLdAx.s 			page 5


 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspInit();
  67              		.loc 1 168 0
  68 001c FFF7FEFF 		bl	HAL_MspInit
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
  69              		.loc 1 171 0
  70 0020 0023     		movs	r3, #0
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
  71              		.loc 1 172 0
  72 0022 1846     		mov	r0, r3
  73 0024 80BD     		pop	{r7, pc}
  74              	.L4:
  75 0026 00BF     		.align	2
  76              	.L3:
  77 0028 00200240 		.word	1073881088
  78              		.cfi_endproc
  79              	.LFE123:
  81              		.section	.text.HAL_DeInit,"ax",%progbits
  82              		.align	2
  83              		.global	HAL_DeInit
  84              		.thumb
  85              		.thumb_func
  87              	HAL_DeInit:
  88              	.LFB124:
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is optional.
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
  89              		.loc 1 180 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 00AF     		add	r7, sp, #0
  99              	.LCFI3:
 100              		.cfi_def_cfa_register 7
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Reset of all peripherals */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 101              		.loc 1 182 0
 102 0004 0C4B     		ldr	r3, .L7
 103 0006 4FF0FF32 		mov	r2, #-1
 104 000a 1A61     		str	r2, [r3, #16]
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 105              		.loc 1 183 0
 106 000c 0A4B     		ldr	r3, .L7
 107 000e 0022     		movs	r2, #0
 108 0010 1A61     		str	r2, [r3, #16]
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
ARM GAS  /tmp/ccvqLdAx.s 			page 6


 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 109              		.loc 1 185 0
 110 0012 094B     		ldr	r3, .L7
 111 0014 4FF0FF32 		mov	r2, #-1
 112 0018 DA60     		str	r2, [r3, #12]
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 113              		.loc 1 186 0
 114 001a 074B     		ldr	r3, .L7
 115 001c 0022     		movs	r2, #0
 116 001e DA60     		str	r2, [r3, #12]
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 117              		.loc 1 188 0
 118 0020 054B     		ldr	r3, .L7
 119 0022 4FF0FF32 		mov	r2, #-1
 120 0026 9A62     		str	r2, [r3, #40]
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 121              		.loc 1 189 0
 122 0028 034B     		ldr	r3, .L7
 123 002a 0022     		movs	r2, #0
 124 002c 9A62     		str	r2, [r3, #40]
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_MspDeInit();
 125              		.loc 1 192 0
 126 002e FFF7FEFF 		bl	HAL_MspDeInit
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Return function status */
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 127              		.loc 1 195 0
 128 0032 0023     		movs	r3, #0
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 129              		.loc 1 196 0
 130 0034 1846     		mov	r0, r3
 131 0036 80BD     		pop	{r7, pc}
 132              	.L8:
 133              		.align	2
 134              	.L7:
 135 0038 00100240 		.word	1073876992
 136              		.cfi_endproc
 137              	.LFE124:
 139              		.section	.text.HAL_MspInit,"ax",%progbits
 140              		.align	2
 141              		.weak	HAL_MspInit
 142              		.thumb
 143              		.thumb_func
 145              	HAL_MspInit:
 146              	.LFB125:
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Initialize the MSP.
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspInit(void)
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 147              		.loc 1 203 0
 148              		.cfi_startproc
ARM GAS  /tmp/ccvqLdAx.s 			page 7


 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 00AF     		add	r7, sp, #0
 157              	.LCFI5:
 158              		.cfi_def_cfa_register 7
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 159              		.loc 1 207 0
 160 0004 BD46     		mov	sp, r7
 161              	.LCFI6:
 162              		.cfi_def_cfa_register 13
 163              		@ sp needed
 164 0006 5DF8047B 		ldr	r7, [sp], #4
 165              	.LCFI7:
 166              		.cfi_restore 7
 167              		.cfi_def_cfa_offset 0
 168 000a 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE125:
 172              		.section	.text.HAL_MspDeInit,"ax",%progbits
 173              		.align	2
 174              		.weak	HAL_MspDeInit
 175              		.thumb
 176              		.thumb_func
 178              	HAL_MspDeInit:
 179              	.LFB126:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  DeInitialize the MSP.
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 180              		.loc 1 214 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              	.LCFI8:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 7, -4
 189 0002 00AF     		add	r7, sp, #0
 190              	.LCFI9:
 191              		.cfi_def_cfa_register 7
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 192              		.loc 1 218 0
ARM GAS  /tmp/ccvqLdAx.s 			page 8


 193 0004 BD46     		mov	sp, r7
 194              	.LCFI10:
 195              		.cfi_def_cfa_register 13
 196              		@ sp needed
 197 0006 5DF8047B 		ldr	r7, [sp], #4
 198              	.LCFI11:
 199              		.cfi_restore 7
 200              		.cfi_def_cfa_offset 0
 201 000a 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE126:
 205              		.section	.text.HAL_InitTick,"ax",%progbits
 206              		.align	2
 207              		.weak	HAL_InitTick
 208              		.thumb
 209              		.thumb_func
 211              	HAL_InitTick:
 212              	.LFB127:
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function configures the source of the time base. 
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Tick interrupt priority. 
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   This function is called  automatically at the beginning of program after
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig()
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals. 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The SysTick interrupt must have higher priority (numerically lower) 
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementation  in user file.
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 213              		.loc 1 237 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              	.LCFI12:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              	.LCFI13:
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI14:
 227              		.cfi_def_cfa_register 7
 228 0006 7860     		str	r0, [r7, #4]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 229              		.loc 1 239 0
 230 0008 124B     		ldr	r3, .L16
ARM GAS  /tmp/ccvqLdAx.s 			page 9


 231 000a 1A68     		ldr	r2, [r3]
 232 000c 124B     		ldr	r3, .L16+4
 233 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 234 0010 1946     		mov	r1, r3
 235 0012 4FF47A73 		mov	r3, #1000
 236 0016 B3FBF1F3 		udiv	r3, r3, r1
 237 001a B2FBF3F3 		udiv	r3, r2, r3
 238 001e 1846     		mov	r0, r3
 239 0020 FFF7FEFF 		bl	HAL_SYSTICK_Config
 240 0024 0346     		mov	r3, r0
 241 0026 002B     		cmp	r3, #0
 242 0028 01D0     		beq	.L12
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     return HAL_ERROR;
 243              		.loc 1 241 0
 244 002a 0123     		movs	r3, #1
 245 002c 0EE0     		b	.L13
 246              	.L12:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Configure the SysTick IRQ priority */
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 247              		.loc 1 245 0
 248 002e 7B68     		ldr	r3, [r7, #4]
 249 0030 0F2B     		cmp	r3, #15
 250 0032 0AD8     		bhi	.L14
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 251              		.loc 1 247 0
 252 0034 4FF0FF30 		mov	r0, #-1
 253 0038 7968     		ldr	r1, [r7, #4]
 254 003a 0022     		movs	r2, #0
 255 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     uwTickPrio = TickPriority;
 256              		.loc 1 248 0
 257 0040 064A     		ldr	r2, .L16+8
 258 0042 7B68     		ldr	r3, [r7, #4]
 259 0044 1360     		str	r3, [r2]
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   else
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     return HAL_ERROR;
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    /* Return function status */
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return HAL_OK;
 260              		.loc 1 255 0
 261 0046 0023     		movs	r3, #0
 262 0048 00E0     		b	.L13
 263              	.L14:
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 264              		.loc 1 252 0
 265 004a 0123     		movs	r3, #1
 266              	.L13:
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 267              		.loc 1 256 0
 268 004c 1846     		mov	r0, r3
 269 004e 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccvqLdAx.s 			page 10


 270              	.LCFI15:
 271              		.cfi_def_cfa_offset 8
 272 0050 BD46     		mov	sp, r7
 273              	.LCFI16:
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 0052 80BD     		pop	{r7, pc}
 277              	.L17:
 278              		.align	2
 279              	.L16:
 280 0054 00000000 		.word	SystemCoreClock
 281 0058 00000000 		.word	uwTickFreq
 282 005c 00000000 		.word	uwTickPrio
 283              		.cfi_endproc
 284              	.LFE127:
 286              		.section	.text.HAL_IncTick,"ax",%progbits
 287              		.align	2
 288              		.weak	HAL_IncTick
 289              		.thumb
 290              		.thumb_func
 292              	HAL_IncTick:
 293              	.LFB128:
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @}
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *  @brief    HAL Control functions
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  *
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @verbatim
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                       ##### HAL Control functions #####
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  ===============================================================================
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     [..]  This section provides functions allowing to:
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a tick value in millisecond
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Provide a blocking delay in millisecond
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Suspend the time base source interrupt
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Resume the time base source interrupt
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the HAL API driver version
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device identifier
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Get the device revision identifier
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****       
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** @endverbatim
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @{
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function is called to increment  a global variable "uwTick"
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used as application time base.
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         in SysTick ISR.
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
ARM GAS  /tmp/ccvqLdAx.s 			page 11


 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_IncTick(void)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 294              		.loc 1 295 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299 0000 80B4     		push	{r7}
 300              	.LCFI17:
 301              		.cfi_def_cfa_offset 4
 302              		.cfi_offset 7, -4
 303 0002 00AF     		add	r7, sp, #0
 304              	.LCFI18:
 305              		.cfi_def_cfa_register 7
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uwTick += uwTickFreq;
 306              		.loc 1 296 0
 307 0004 054B     		ldr	r3, .L19
 308 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 0008 1A46     		mov	r2, r3
 310 000a 054B     		ldr	r3, .L19+4
 311 000c 1B68     		ldr	r3, [r3]
 312 000e 1344     		add	r3, r3, r2
 313 0010 034A     		ldr	r2, .L19+4
 314 0012 1360     		str	r3, [r2]
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 315              		.loc 1 297 0
 316 0014 BD46     		mov	sp, r7
 317              	.LCFI19:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0016 5DF8047B 		ldr	r7, [sp], #4
 321              	.LCFI20:
 322              		.cfi_restore 7
 323              		.cfi_def_cfa_offset 0
 324 001a 7047     		bx	lr
 325              	.L20:
 326              		.align	2
 327              	.L19:
 328 001c 00000000 		.word	uwTickFreq
 329 0020 00000000 		.word	uwTick
 330              		.cfi_endproc
 331              	.LFE128:
 333              		.section	.text.HAL_GetTick,"ax",%progbits
 334              		.align	2
 335              		.weak	HAL_GetTick
 336              		.thumb
 337              		.thumb_func
 339              	HAL_GetTick:
 340              	.LFB129:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Povides a tick value in millisecond.
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   The function is declared as __Weak  to be overwritten  in case of other 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick value
ARM GAS  /tmp/ccvqLdAx.s 			page 12


 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 341              		.loc 1 306 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 80B4     		push	{r7}
 347              	.LCFI21:
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 0002 00AF     		add	r7, sp, #0
 351              	.LCFI22:
 352              		.cfi_def_cfa_register 7
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTick;  
 353              		.loc 1 307 0
 354 0004 034B     		ldr	r3, .L23
 355 0006 1B68     		ldr	r3, [r3]
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 356              		.loc 1 308 0
 357 0008 1846     		mov	r0, r3
 358 000a BD46     		mov	sp, r7
 359              	.LCFI23:
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 000c 5DF8047B 		ldr	r7, [sp], #4
 363              	.LCFI24:
 364              		.cfi_restore 7
 365              		.cfi_def_cfa_offset 0
 366 0010 7047     		bx	lr
 367              	.L24:
 368 0012 00BF     		.align	2
 369              	.L23:
 370 0014 00000000 		.word	uwTick
 371              		.cfi_endproc
 372              	.LFE129:
 374              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 375              		.align	2
 376              		.global	HAL_GetTickPrio
 377              		.thumb
 378              		.thumb_func
 380              	HAL_GetTickPrio:
 381              	.LFB130:
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief This function returns a tick priority.
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick priority
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 382              		.loc 1 315 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccvqLdAx.s 			page 13


 388              	.LCFI25:
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 00AF     		add	r7, sp, #0
 392              	.LCFI26:
 393              		.cfi_def_cfa_register 7
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTickPrio;
 394              		.loc 1 316 0
 395 0004 034B     		ldr	r3, .L27
 396 0006 1B68     		ldr	r3, [r3]
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 397              		.loc 1 317 0
 398 0008 1846     		mov	r0, r3
 399 000a BD46     		mov	sp, r7
 400              	.LCFI27:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 000c 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI28:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0010 7047     		bx	lr
 408              	.L28:
 409 0012 00BF     		.align	2
 410              	.L27:
 411 0014 00000000 		.word	uwTickPrio
 412              		.cfi_endproc
 413              	.LFE130:
 415              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 416              		.align	2
 417              		.global	HAL_SetTickFreq
 418              		.thumb
 419              		.thumb_func
 421              	HAL_SetTickFreq:
 422              	.LFB131:
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief Set new tick Freq.
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Status
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 423              		.loc 1 324 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 16
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427 0000 80B5     		push	{r7, lr}
 428              	.LCFI29:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 84B0     		sub	sp, sp, #16
 433              	.LCFI30:
 434              		.cfi_def_cfa_offset 24
 435 0004 00AF     		add	r7, sp, #0
 436              	.LCFI31:
 437              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccvqLdAx.s 			page 14


 438 0006 0346     		mov	r3, r0
 439 0008 FB71     		strb	r3, [r7, #7]
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 440              		.loc 1 325 0
 441 000a 0023     		movs	r3, #0
 442 000c FB73     		strb	r3, [r7, #15]
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (uwTickFreq != Freq)
 443              		.loc 1 328 0
 444 000e 0A4B     		ldr	r3, .L32
 445 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 447 0014 9A42     		cmp	r2, r3
 448 0016 09D0     		beq	.L30
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     uwTickFreq = Freq;
 449              		.loc 1 330 0
 450 0018 074A     		ldr	r2, .L32
 451 001a FB79     		ldrb	r3, [r7, #7]
 452 001c 1370     		strb	r3, [r2]
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     /* Apply the new tick Freq  */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 453              		.loc 1 333 0
 454 001e 074B     		ldr	r3, .L32+4
 455 0020 1B68     		ldr	r3, [r3]
 456 0022 1846     		mov	r0, r3
 457 0024 FFF7FEFF 		bl	HAL_InitTick
 458 0028 0346     		mov	r3, r0
 459 002a FB73     		strb	r3, [r7, #15]
 460              	.L30:
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return status;
 461              		.loc 1 336 0
 462 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 463              		.loc 1 337 0
 464 002e 1846     		mov	r0, r3
 465 0030 1037     		adds	r7, r7, #16
 466              	.LCFI32:
 467              		.cfi_def_cfa_offset 8
 468 0032 BD46     		mov	sp, r7
 469              	.LCFI33:
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0034 80BD     		pop	{r7, pc}
 473              	.L33:
 474 0036 00BF     		.align	2
 475              	.L32:
 476 0038 00000000 		.word	uwTickFreq
 477 003c 00000000 		.word	uwTickPrio
 478              		.cfi_endproc
 479              	.LFE131:
 481              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 482              		.align	2
ARM GAS  /tmp/ccvqLdAx.s 			page 15


 483              		.global	HAL_GetTickFreq
 484              		.thumb
 485              		.thumb_func
 487              	HAL_GetTickFreq:
 488              	.LFB132:
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief Return tick frequency.
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval tick period in Hz
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 489              		.loc 1 344 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              	.LCFI34:
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 00AF     		add	r7, sp, #0
 499              	.LCFI35:
 500              		.cfi_def_cfa_register 7
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return uwTickFreq;
 501              		.loc 1 345 0
 502 0004 034B     		ldr	r3, .L36
 503 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 504              		.loc 1 346 0
 505 0008 1846     		mov	r0, r3
 506 000a BD46     		mov	sp, r7
 507              	.LCFI36:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 000c 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI37:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0010 7047     		bx	lr
 515              	.L37:
 516 0012 00BF     		.align	2
 517              	.L36:
 518 0014 00000000 		.word	uwTickFreq
 519              		.cfi_endproc
 520              	.LFE132:
 522              		.section	.text.HAL_Delay,"ax",%progbits
 523              		.align	2
 524              		.weak	HAL_Delay
 525              		.thumb
 526              		.thumb_func
 528              	HAL_Delay:
 529              	.LFB133:
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function provides accurate delay (in milliseconds) based 
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         on variable incremented.
ARM GAS  /tmp/ccvqLdAx.s 			page 16


 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. 
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         It is used to generate interrupts at regular time intervals where uwTick
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is incremented.
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @param  Delay specifies the delay time length, in milliseconds.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 530              		.loc 1 360 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 16
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534 0000 80B5     		push	{r7, lr}
 535              	.LCFI38:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 84B0     		sub	sp, sp, #16
 540              	.LCFI39:
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              	.LCFI40:
 544              		.cfi_def_cfa_register 7
 545 0006 7860     		str	r0, [r7, #4]
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 546              		.loc 1 361 0
 547 0008 FFF7FEFF 		bl	HAL_GetTick
 548 000c B860     		str	r0, [r7, #8]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   uint32_t wait = Delay;
 549              		.loc 1 362 0
 550 000e 7B68     		ldr	r3, [r7, #4]
 551 0010 FB60     		str	r3, [r7, #12]
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Add freq to guarantee minimum wait */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 552              		.loc 1 365 0
 553 0012 FB68     		ldr	r3, [r7, #12]
 554 0014 B3F1FF3F 		cmp	r3, #-1
 555 0018 05D0     		beq	.L39
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 556              		.loc 1 367 0
 557 001a 094B     		ldr	r3, .L41
 558 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 001e 1A46     		mov	r2, r3
 560 0020 FB68     		ldr	r3, [r7, #12]
 561 0022 1344     		add	r3, r3, r2
 562 0024 FB60     		str	r3, [r7, #12]
 563              	.L39:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 564              		.loc 1 370 0
 565 0026 00BF     		nop
 566              	.L40:
ARM GAS  /tmp/ccvqLdAx.s 			page 17


 567              		.loc 1 370 0 is_stmt 0 discriminator 1
 568 0028 FFF7FEFF 		bl	HAL_GetTick
 569 002c 0246     		mov	r2, r0
 570 002e BB68     		ldr	r3, [r7, #8]
 571 0030 D21A     		subs	r2, r2, r3
 572 0032 FB68     		ldr	r3, [r7, #12]
 573 0034 9A42     		cmp	r2, r3
 574 0036 F7D3     		bcc	.L40
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   {
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 575              		.loc 1 373 0 is_stmt 1
 576 0038 1037     		adds	r7, r7, #16
 577              	.LCFI41:
 578              		.cfi_def_cfa_offset 8
 579 003a BD46     		mov	sp, r7
 580              	.LCFI42:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 003c 80BD     		pop	{r7, pc}
 584              	.L42:
 585 003e 00BF     		.align	2
 586              	.L41:
 587 0040 00000000 		.word	uwTickFreq
 588              		.cfi_endproc
 589              	.LFE133:
 591              		.section	.text.HAL_SuspendTick,"ax",%progbits
 592              		.align	2
 593              		.weak	HAL_SuspendTick
 594              		.thumb
 595              		.thumb_func
 597              	HAL_SuspendTick:
 598              	.LFB134:
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Suspend Tick increment.
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be disabled and so Tick increment 
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is suspended.
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_SuspendTick(void)
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 599              		.loc 1 387 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 80B4     		push	{r7}
 605              	.LCFI43:
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccvqLdAx.s 			page 18


 609              	.LCFI44:
 610              		.cfi_def_cfa_register 7
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Disable SysTick Interrupt */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 611              		.loc 1 389 0
 612 0004 044A     		ldr	r2, .L44
 613 0006 044B     		ldr	r3, .L44
 614 0008 1B68     		ldr	r3, [r3]
 615 000a 23F00203 		bic	r3, r3, #2
 616 000e 1360     		str	r3, [r2]
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****                                                    
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 617              		.loc 1 391 0
 618 0010 BD46     		mov	sp, r7
 619              	.LCFI45:
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 0012 5DF8047B 		ldr	r7, [sp], #4
 623              	.LCFI46:
 624              		.cfi_restore 7
 625              		.cfi_def_cfa_offset 0
 626 0016 7047     		bx	lr
 627              	.L45:
 628              		.align	2
 629              	.L44:
 630 0018 10E000E0 		.word	-536813552
 631              		.cfi_endproc
 632              	.LFE134:
 634              		.section	.text.HAL_ResumeTick,"ax",%progbits
 635              		.align	2
 636              		.weak	HAL_ResumeTick
 637              		.thumb
 638              		.thumb_func
 640              	HAL_ResumeTick:
 641              	.LFB135:
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Resume Tick increment.
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @note   In the default implementation , SysTick timer is the source of time base. It is  
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is called, the the SysTick interrupt will be enabled and so Tick increment 
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         is resumed.
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         The function is declared as __Weak  to be overwritten  in case of other
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   *         implementations  in user file.
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** __weak void HAL_ResumeTick(void)
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 642              		.loc 1 404 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0000 80B4     		push	{r7}
 648              	.LCFI47:
 649              		.cfi_def_cfa_offset 4
 650              		.cfi_offset 7, -4
ARM GAS  /tmp/ccvqLdAx.s 			page 19


 651 0002 00AF     		add	r7, sp, #0
 652              	.LCFI48:
 653              		.cfi_def_cfa_register 7
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   /* Enable SysTick Interrupt */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 654              		.loc 1 406 0
 655 0004 044A     		ldr	r2, .L47
 656 0006 044B     		ldr	r3, .L47
 657 0008 1B68     		ldr	r3, [r3]
 658 000a 43F00203 		orr	r3, r3, #2
 659 000e 1360     		str	r3, [r2]
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 660              		.loc 1 408 0
 661 0010 BD46     		mov	sp, r7
 662              	.LCFI49:
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 0012 5DF8047B 		ldr	r7, [sp], #4
 666              	.LCFI50:
 667              		.cfi_restore 7
 668              		.cfi_def_cfa_offset 0
 669 0016 7047     		bx	lr
 670              	.L48:
 671              		.align	2
 672              	.L47:
 673 0018 10E000E0 		.word	-536813552
 674              		.cfi_endproc
 675              	.LFE135:
 677              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 678              		.align	2
 679              		.global	HAL_GetHalVersion
 680              		.thumb
 681              		.thumb_func
 683              	HAL_GetHalVersion:
 684              	.LFB136:
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  This function returns the HAL revision
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 685              		.loc 1 415 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 80B4     		push	{r7}
 691              	.LCFI51:
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 00AF     		add	r7, sp, #0
 695              	.LCFI52:
 696              		.cfi_def_cfa_register 7
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****  return __STM32F3xx_HAL_VERSION;
 697              		.loc 1 416 0
ARM GAS  /tmp/ccvqLdAx.s 			page 20


 698 0004 024B     		ldr	r3, .L51
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 699              		.loc 1 417 0
 700 0006 1846     		mov	r0, r3
 701 0008 BD46     		mov	sp, r7
 702              	.LCFI53:
 703              		.cfi_def_cfa_register 13
 704              		@ sp needed
 705 000a 5DF8047B 		ldr	r7, [sp], #4
 706              	.LCFI54:
 707              		.cfi_restore 7
 708              		.cfi_def_cfa_offset 0
 709 000e 7047     		bx	lr
 710              	.L52:
 711              		.align	2
 712              	.L51:
 713 0010 00020501 		.word	17105408
 714              		.cfi_endproc
 715              	.LFE136:
 717              		.section	.text.HAL_GetREVID,"ax",%progbits
 718              		.align	2
 719              		.global	HAL_GetREVID
 720              		.thumb
 721              		.thumb_func
 723              	HAL_GetREVID:
 724              	.LFB137:
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device revision identifier.
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device revision identifier
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetREVID(void)
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 725              		.loc 1 424 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              	.LCFI55:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0002 00AF     		add	r7, sp, #0
 735              	.LCFI56:
 736              		.cfi_def_cfa_register 7
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 737              		.loc 1 425 0
 738 0004 034B     		ldr	r3, .L55
 739 0006 1B68     		ldr	r3, [r3]
 740 0008 1B0C     		lsrs	r3, r3, #16
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 741              		.loc 1 426 0
 742 000a 1846     		mov	r0, r3
 743 000c BD46     		mov	sp, r7
 744              	.LCFI57:
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
ARM GAS  /tmp/ccvqLdAx.s 			page 21


 747 000e 5DF8047B 		ldr	r7, [sp], #4
 748              	.LCFI58:
 749              		.cfi_restore 7
 750              		.cfi_def_cfa_offset 0
 751 0012 7047     		bx	lr
 752              	.L56:
 753              		.align	2
 754              	.L55:
 755 0014 002004E0 		.word	-536600576
 756              		.cfi_endproc
 757              	.LFE137:
 759              		.section	.text.HAL_GetDEVID,"ax",%progbits
 760              		.align	2
 761              		.global	HAL_GetDEVID
 762              		.thumb
 763              		.thumb_func
 765              	HAL_GetDEVID:
 766              	.LFB138:
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns the device identifier.
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetDEVID(void)
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 767              		.loc 1 433 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              	.LCFI59:
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 7, -4
 776 0002 00AF     		add	r7, sp, #0
 777              	.LCFI60:
 778              		.cfi_def_cfa_register 7
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 779              		.loc 1 434 0
 780 0004 044B     		ldr	r3, .L59
 781 0006 1B68     		ldr	r3, [r3]
 782 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 783              		.loc 1 435 0
 784 000c 1846     		mov	r0, r3
 785 000e BD46     		mov	sp, r7
 786              	.LCFI61:
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 0010 5DF8047B 		ldr	r7, [sp], #4
 790              	.LCFI62:
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 0014 7047     		bx	lr
 794              	.L60:
 795 0016 00BF     		.align	2
 796              	.L59:
ARM GAS  /tmp/ccvqLdAx.s 			page 22


 797 0018 002004E0 		.word	-536600576
 798              		.cfi_endproc
 799              	.LFE138:
 801              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 802              		.align	2
 803              		.global	HAL_GetUIDw0
 804              		.thumb
 805              		.thumb_func
 807              	HAL_GetUIDw0:
 808              	.LFB139:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 809              		.loc 1 442 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 80B4     		push	{r7}
 815              	.LCFI63:
 816              		.cfi_def_cfa_offset 4
 817              		.cfi_offset 7, -4
 818 0002 00AF     		add	r7, sp, #0
 819              	.LCFI64:
 820              		.cfi_def_cfa_register 7
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 821              		.loc 1 443 0
 822 0004 034B     		ldr	r3, .L63
 823 0006 1B68     		ldr	r3, [r3]
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 824              		.loc 1 444 0
 825 0008 1846     		mov	r0, r3
 826 000a BD46     		mov	sp, r7
 827              	.LCFI65:
 828              		.cfi_def_cfa_register 13
 829              		@ sp needed
 830 000c 5DF8047B 		ldr	r7, [sp], #4
 831              	.LCFI66:
 832              		.cfi_restore 7
 833              		.cfi_def_cfa_offset 0
 834 0010 7047     		bx	lr
 835              	.L64:
 836 0012 00BF     		.align	2
 837              	.L63:
 838 0014 ACF7FF1F 		.word	536868780
 839              		.cfi_endproc
 840              	.LFE139:
 842              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 843              		.align	2
 844              		.global	HAL_GetUIDw1
 845              		.thumb
 846              		.thumb_func
 848              	HAL_GetUIDw1:
ARM GAS  /tmp/ccvqLdAx.s 			page 23


 849              	.LFB140:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 850              		.loc 1 451 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0000 80B4     		push	{r7}
 856              	.LCFI67:
 857              		.cfi_def_cfa_offset 4
 858              		.cfi_offset 7, -4
 859 0002 00AF     		add	r7, sp, #0
 860              	.LCFI68:
 861              		.cfi_def_cfa_register 7
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 862              		.loc 1 452 0
 863 0004 034B     		ldr	r3, .L67
 864 0006 1B68     		ldr	r3, [r3]
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 865              		.loc 1 453 0
 866 0008 1846     		mov	r0, r3
 867 000a BD46     		mov	sp, r7
 868              	.LCFI69:
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 000c 5DF8047B 		ldr	r7, [sp], #4
 872              	.LCFI70:
 873              		.cfi_restore 7
 874              		.cfi_def_cfa_offset 0
 875 0010 7047     		bx	lr
 876              	.L68:
 877 0012 00BF     		.align	2
 878              	.L67:
 879 0014 B0F7FF1F 		.word	536868784
 880              		.cfi_endproc
 881              	.LFE140:
 883              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 884              		.align	2
 885              		.global	HAL_GetUIDw2
 886              		.thumb
 887              		.thumb_func
 889              	HAL_GetUIDw2:
 890              	.LFB141:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 891              		.loc 1 460 0
ARM GAS  /tmp/ccvqLdAx.s 			page 24


 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896 0000 80B4     		push	{r7}
 897              	.LCFI71:
 898              		.cfi_def_cfa_offset 4
 899              		.cfi_offset 7, -4
 900 0002 00AF     		add	r7, sp, #0
 901              	.LCFI72:
 902              		.cfi_def_cfa_register 7
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 903              		.loc 1 461 0
 904 0004 034B     		ldr	r3, .L71
 905 0006 1B68     		ldr	r3, [r3]
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 906              		.loc 1 462 0
 907 0008 1846     		mov	r0, r3
 908 000a BD46     		mov	sp, r7
 909              	.LCFI73:
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 000c 5DF8047B 		ldr	r7, [sp], #4
 913              	.LCFI74:
 914              		.cfi_restore 7
 915              		.cfi_def_cfa_offset 0
 916 0010 7047     		bx	lr
 917              	.L72:
 918 0012 00BF     		.align	2
 919              	.L71:
 920 0014 B4F7FF1F 		.word	536868788
 921              		.cfi_endproc
 922              	.LFE141:
 924              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 925              		.align	2
 926              		.global	HAL_DBGMCU_EnableDBGSleepMode
 927              		.thumb
 928              		.thumb_func
 930              	HAL_DBGMCU_EnableDBGSleepMode:
 931              	.LFB142:
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 932              		.loc 1 469 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI75:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccvqLdAx.s 			page 25


 942              	.LCFI76:
 943              		.cfi_def_cfa_register 7
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 944              		.loc 1 470 0
 945 0004 044A     		ldr	r2, .L74
 946 0006 044B     		ldr	r3, .L74
 947 0008 5B68     		ldr	r3, [r3, #4]
 948 000a 43F00103 		orr	r3, r3, #1
 949 000e 5360     		str	r3, [r2, #4]
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 950              		.loc 1 471 0
 951 0010 BD46     		mov	sp, r7
 952              	.LCFI77:
 953              		.cfi_def_cfa_register 13
 954              		@ sp needed
 955 0012 5DF8047B 		ldr	r7, [sp], #4
 956              	.LCFI78:
 957              		.cfi_restore 7
 958              		.cfi_def_cfa_offset 0
 959 0016 7047     		bx	lr
 960              	.L75:
 961              		.align	2
 962              	.L74:
 963 0018 002004E0 		.word	-536600576
 964              		.cfi_endproc
 965              	.LFE142:
 967              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 968              		.align	2
 969              		.global	HAL_DBGMCU_DisableDBGSleepMode
 970              		.thumb
 971              		.thumb_func
 973              	HAL_DBGMCU_DisableDBGSleepMode:
 974              	.LFB143:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 975              		.loc 1 478 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              	.LCFI79:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 7, -4
 984 0002 00AF     		add	r7, sp, #0
 985              	.LCFI80:
 986              		.cfi_def_cfa_register 7
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 987              		.loc 1 479 0
 988 0004 044A     		ldr	r2, .L77
 989 0006 044B     		ldr	r3, .L77
 990 0008 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccvqLdAx.s 			page 26


 991 000a 23F00103 		bic	r3, r3, #1
 992 000e 5360     		str	r3, [r2, #4]
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 993              		.loc 1 480 0
 994 0010 BD46     		mov	sp, r7
 995              	.LCFI81:
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 0012 5DF8047B 		ldr	r7, [sp], #4
 999              	.LCFI82:
 1000              		.cfi_restore 7
 1001              		.cfi_def_cfa_offset 0
 1002 0016 7047     		bx	lr
 1003              	.L78:
 1004              		.align	2
 1005              	.L77:
 1006 0018 002004E0 		.word	-536600576
 1007              		.cfi_endproc
 1008              	.LFE143:
 1010              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1011              		.align	2
 1012              		.global	HAL_DBGMCU_EnableDBGStopMode
 1013              		.thumb
 1014              		.thumb_func
 1016              	HAL_DBGMCU_EnableDBGStopMode:
 1017              	.LFB144:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 1018              		.loc 1 487 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023 0000 80B4     		push	{r7}
 1024              	.LCFI83:
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              	.LCFI84:
 1029              		.cfi_def_cfa_register 7
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1030              		.loc 1 488 0
 1031 0004 044A     		ldr	r2, .L80
 1032 0006 044B     		ldr	r3, .L80
 1033 0008 5B68     		ldr	r3, [r3, #4]
 1034 000a 43F00203 		orr	r3, r3, #2
 1035 000e 5360     		str	r3, [r2, #4]
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 1036              		.loc 1 489 0
 1037 0010 BD46     		mov	sp, r7
 1038              	.LCFI85:
 1039              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccvqLdAx.s 			page 27


 1040              		@ sp needed
 1041 0012 5DF8047B 		ldr	r7, [sp], #4
 1042              	.LCFI86:
 1043              		.cfi_restore 7
 1044              		.cfi_def_cfa_offset 0
 1045 0016 7047     		bx	lr
 1046              	.L81:
 1047              		.align	2
 1048              	.L80:
 1049 0018 002004E0 		.word	-536600576
 1050              		.cfi_endproc
 1051              	.LFE144:
 1053              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1054              		.align	2
 1055              		.global	HAL_DBGMCU_DisableDBGStopMode
 1056              		.thumb
 1057              		.thumb_func
 1059              	HAL_DBGMCU_DisableDBGStopMode:
 1060              	.LFB145:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 1061              		.loc 1 496 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066 0000 80B4     		push	{r7}
 1067              	.LCFI87:
 1068              		.cfi_def_cfa_offset 4
 1069              		.cfi_offset 7, -4
 1070 0002 00AF     		add	r7, sp, #0
 1071              	.LCFI88:
 1072              		.cfi_def_cfa_register 7
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1073              		.loc 1 497 0
 1074 0004 044A     		ldr	r2, .L83
 1075 0006 044B     		ldr	r3, .L83
 1076 0008 5B68     		ldr	r3, [r3, #4]
 1077 000a 23F00203 		bic	r3, r3, #2
 1078 000e 5360     		str	r3, [r2, #4]
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 1079              		.loc 1 498 0
 1080 0010 BD46     		mov	sp, r7
 1081              	.LCFI89:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 0012 5DF8047B 		ldr	r7, [sp], #4
 1085              	.LCFI90:
 1086              		.cfi_restore 7
 1087              		.cfi_def_cfa_offset 0
 1088 0016 7047     		bx	lr
 1089              	.L84:
ARM GAS  /tmp/ccvqLdAx.s 			page 28


 1090              		.align	2
 1091              	.L83:
 1092 0018 002004E0 		.word	-536600576
 1093              		.cfi_endproc
 1094              	.LFE145:
 1096              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1097              		.align	2
 1098              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1099              		.thumb
 1100              		.thumb_func
 1102              	HAL_DBGMCU_EnableDBGStandbyMode:
 1103              	.LFB146:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 1104              		.loc 1 505 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109 0000 80B4     		push	{r7}
 1110              	.LCFI91:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 00AF     		add	r7, sp, #0
 1114              	.LCFI92:
 1115              		.cfi_def_cfa_register 7
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1116              		.loc 1 506 0
 1117 0004 044A     		ldr	r2, .L86
 1118 0006 044B     		ldr	r3, .L86
 1119 0008 5B68     		ldr	r3, [r3, #4]
 1120 000a 43F00403 		orr	r3, r3, #4
 1121 000e 5360     		str	r3, [r2, #4]
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 1122              		.loc 1 507 0
 1123 0010 BD46     		mov	sp, r7
 1124              	.LCFI93:
 1125              		.cfi_def_cfa_register 13
 1126              		@ sp needed
 1127 0012 5DF8047B 		ldr	r7, [sp], #4
 1128              	.LCFI94:
 1129              		.cfi_restore 7
 1130              		.cfi_def_cfa_offset 0
 1131 0016 7047     		bx	lr
 1132              	.L87:
 1133              		.align	2
 1134              	.L86:
 1135 0018 002004E0 		.word	-536600576
 1136              		.cfi_endproc
 1137              	.LFE146:
 1139              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1140              		.align	2
ARM GAS  /tmp/ccvqLdAx.s 			page 29


 1141              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1142              		.thumb
 1143              		.thumb_func
 1145              	HAL_DBGMCU_DisableDBGStandbyMode:
 1146              	.LFB147:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** 
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** /**
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   * @retval None
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** {
 1147              		.loc 1 514 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 0000 80B4     		push	{r7}
 1153              	.LCFI95:
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 00AF     		add	r7, sp, #0
 1157              	.LCFI96:
 1158              		.cfi_def_cfa_register 7
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1159              		.loc 1 515 0
 1160 0004 044A     		ldr	r2, .L89
 1161 0006 044B     		ldr	r3, .L89
 1162 0008 5B68     		ldr	r3, [r3, #4]
 1163 000a 23F00403 		bic	r3, r3, #4
 1164 000e 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c **** }
 1165              		.loc 1 516 0
 1166 0010 BD46     		mov	sp, r7
 1167              	.LCFI97:
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 0012 5DF8047B 		ldr	r7, [sp], #4
 1171              	.LCFI98:
 1172              		.cfi_restore 7
 1173              		.cfi_def_cfa_offset 0
 1174 0016 7047     		bx	lr
 1175              	.L90:
 1176              		.align	2
 1177              	.L89:
 1178 0018 002004E0 		.word	-536600576
 1179              		.cfi_endproc
 1180              	.LFE147:
 1182              		.text
 1183              	.Letext0:
 1184              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1185              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1186              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1187              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1188              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1189              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1190              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
ARM GAS  /tmp/ccvqLdAx.s 			page 30


ARM GAS  /tmp/ccvqLdAx.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccvqLdAx.s:26     .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccvqLdAx.s:23     .data.uwTickPrio:0000000000000000 $d
     /tmp/ccvqLdAx.s:32     .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccvqLdAx.s:35     .text.HAL_Init:0000000000000000 $t
     /tmp/ccvqLdAx.s:40     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccvqLdAx.s:211    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccvqLdAx.s:145    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccvqLdAx.s:77     .text.HAL_Init:0000000000000028 $d
     /tmp/ccvqLdAx.s:82     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccvqLdAx.s:87     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccvqLdAx.s:178    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccvqLdAx.s:135    .text.HAL_DeInit:0000000000000038 $d
     /tmp/ccvqLdAx.s:140    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccvqLdAx.s:173    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccvqLdAx.s:206    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccvqLdAx.s:280    .text.HAL_InitTick:0000000000000054 $d
     /tmp/ccvqLdAx.s:287    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccvqLdAx.s:292    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccvqLdAx.s:328    .text.HAL_IncTick:000000000000001c $d
     /tmp/ccvqLdAx.s:334    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccvqLdAx.s:339    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccvqLdAx.s:370    .text.HAL_GetTick:0000000000000014 $d
     /tmp/ccvqLdAx.s:375    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccvqLdAx.s:380    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccvqLdAx.s:411    .text.HAL_GetTickPrio:0000000000000014 $d
     /tmp/ccvqLdAx.s:416    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccvqLdAx.s:421    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccvqLdAx.s:476    .text.HAL_SetTickFreq:0000000000000038 $d
     /tmp/ccvqLdAx.s:482    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccvqLdAx.s:487    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccvqLdAx.s:518    .text.HAL_GetTickFreq:0000000000000014 $d
     /tmp/ccvqLdAx.s:523    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccvqLdAx.s:528    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccvqLdAx.s:587    .text.HAL_Delay:0000000000000040 $d
     /tmp/ccvqLdAx.s:592    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccvqLdAx.s:597    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccvqLdAx.s:630    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/ccvqLdAx.s:635    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccvqLdAx.s:640    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccvqLdAx.s:673    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/ccvqLdAx.s:678    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccvqLdAx.s:683    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccvqLdAx.s:713    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/ccvqLdAx.s:718    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccvqLdAx.s:723    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccvqLdAx.s:755    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/ccvqLdAx.s:760    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccvqLdAx.s:765    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccvqLdAx.s:797    .text.HAL_GetDEVID:0000000000000018 $d
     /tmp/ccvqLdAx.s:802    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccvqLdAx.s:807    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccvqLdAx.s:838    .text.HAL_GetUIDw0:0000000000000014 $d
     /tmp/ccvqLdAx.s:843    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccvqLdAx.s:848    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
ARM GAS  /tmp/ccvqLdAx.s 			page 32


     /tmp/ccvqLdAx.s:879    .text.HAL_GetUIDw1:0000000000000014 $d
     /tmp/ccvqLdAx.s:884    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccvqLdAx.s:889    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccvqLdAx.s:920    .text.HAL_GetUIDw2:0000000000000014 $d
     /tmp/ccvqLdAx.s:925    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:930    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccvqLdAx.s:963    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000018 $d
     /tmp/ccvqLdAx.s:968    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:973    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccvqLdAx.s:1006   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000018 $d
     /tmp/ccvqLdAx.s:1011   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:1016   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccvqLdAx.s:1049   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/ccvqLdAx.s:1054   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:1059   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccvqLdAx.s:1092   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/ccvqLdAx.s:1097   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:1102   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccvqLdAx.s:1135   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/ccvqLdAx.s:1140   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccvqLdAx.s:1145   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccvqLdAx.s:1178   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
