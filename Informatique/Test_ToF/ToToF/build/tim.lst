ARM GAS  /tmp/ccPt3sCt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	htim1,64,4
  21              		.comm	htim2,64,4
  22              		.section	.rodata
  23              		.align	2
  24              	.LC0:
  25 0000 5372632F 		.ascii	"Src/tim.c\000"
  25      74696D2E 
  25      6300
  26              		.section	.text.MX_TIM1_Init,"ax",%progbits
  27              		.align	2
  28              		.global	MX_TIM1_Init
  29              		.thumb
  30              		.thumb_func
  32              	MX_TIM1_Init:
  33              	.LFB123:
  34              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccPt3sCt.s 			page 2


  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE END 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** TIM_HandleTypeDef htim1;
  48:Src/tim.c     **** TIM_HandleTypeDef htim2;
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* TIM1 init function */
  51:Src/tim.c     **** void MX_TIM1_Init(void)
  52:Src/tim.c     **** {
  35              		.loc 1 52 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 88B0     		sub	sp, sp, #32
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 40
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  53:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  54:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  55:Src/tim.c     **** 
  56:Src/tim.c     ****   htim1.Instance = TIM1;
  50              		.loc 1 56 0
  51 0006 224B     		ldr	r3, .L5
  52 0008 224A     		ldr	r2, .L5+4
  53 000a 1A60     		str	r2, [r3]
  57:Src/tim.c     ****   htim1.Init.Prescaler = 0;
  54              		.loc 1 57 0
  55 000c 204B     		ldr	r3, .L5
  56 000e 0022     		movs	r2, #0
ARM GAS  /tmp/ccPt3sCt.s 			page 3


  57 0010 5A60     		str	r2, [r3, #4]
  58:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  58              		.loc 1 58 0
  59 0012 1F4B     		ldr	r3, .L5
  60 0014 0022     		movs	r2, #0
  61 0016 9A60     		str	r2, [r3, #8]
  59:Src/tim.c     ****   htim1.Init.Period = 0;
  62              		.loc 1 59 0
  63 0018 1D4B     		ldr	r3, .L5
  64 001a 0022     		movs	r2, #0
  65 001c DA60     		str	r2, [r3, #12]
  60:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  66              		.loc 1 60 0
  67 001e 1C4B     		ldr	r3, .L5
  68 0020 0022     		movs	r2, #0
  69 0022 1A61     		str	r2, [r3, #16]
  61:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  70              		.loc 1 61 0
  71 0024 1A4B     		ldr	r3, .L5
  72 0026 0022     		movs	r2, #0
  73 0028 5A61     		str	r2, [r3, #20]
  62:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  74              		.loc 1 62 0
  75 002a 194B     		ldr	r3, .L5
  76 002c 0022     		movs	r2, #0
  77 002e 9A61     		str	r2, [r3, #24]
  63:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  78              		.loc 1 63 0
  79 0030 1748     		ldr	r0, .L5
  80 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
  81 0036 0346     		mov	r3, r0
  82 0038 002B     		cmp	r3, #0
  83 003a 03D0     		beq	.L2
  64:Src/tim.c     ****   {
  65:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  84              		.loc 1 65 0
  85 003c 1648     		ldr	r0, .L5+8
  86 003e 4121     		movs	r1, #65
  87 0040 FFF7FEFF 		bl	_Error_Handler
  88              	.L2:
  66:Src/tim.c     ****   }
  67:Src/tim.c     **** 
  68:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  89              		.loc 1 68 0
  90 0044 4FF48053 		mov	r3, #4096
  91 0048 3B61     		str	r3, [r7, #16]
  69:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  92              		.loc 1 69 0
  93 004a 07F11003 		add	r3, r7, #16
  94 004e 1048     		ldr	r0, .L5
  95 0050 1946     		mov	r1, r3
  96 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  97 0056 0346     		mov	r3, r0
  98 0058 002B     		cmp	r3, #0
  99 005a 03D0     		beq	.L3
  70:Src/tim.c     ****   {
  71:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /tmp/ccPt3sCt.s 			page 4


 100              		.loc 1 71 0
 101 005c 0E48     		ldr	r0, .L5+8
 102 005e 4721     		movs	r1, #71
 103 0060 FFF7FEFF 		bl	_Error_Handler
 104              	.L3:
  72:Src/tim.c     ****   }
  73:Src/tim.c     **** 
  74:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 105              		.loc 1 74 0
 106 0064 0023     		movs	r3, #0
 107 0066 7B60     		str	r3, [r7, #4]
  75:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 108              		.loc 1 75 0
 109 0068 0023     		movs	r3, #0
 110 006a BB60     		str	r3, [r7, #8]
  76:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 111              		.loc 1 76 0
 112 006c 0023     		movs	r3, #0
 113 006e FB60     		str	r3, [r7, #12]
  77:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 114              		.loc 1 77 0
 115 0070 3B1D     		adds	r3, r7, #4
 116 0072 0748     		ldr	r0, .L5
 117 0074 1946     		mov	r1, r3
 118 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 119 007a 0346     		mov	r3, r0
 120 007c 002B     		cmp	r3, #0
 121 007e 03D0     		beq	.L1
  78:Src/tim.c     ****   {
  79:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 122              		.loc 1 79 0
 123 0080 0548     		ldr	r0, .L5+8
 124 0082 4F21     		movs	r1, #79
 125 0084 FFF7FEFF 		bl	_Error_Handler
 126              	.L1:
  80:Src/tim.c     ****   }
  81:Src/tim.c     **** 
  82:Src/tim.c     **** }
 127              		.loc 1 82 0
 128 0088 2037     		adds	r7, r7, #32
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 008a BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 008c 80BD     		pop	{r7, pc}
 136              	.L6:
 137 008e 00BF     		.align	2
 138              	.L5:
 139 0090 00000000 		.word	htim1
 140 0094 002C0140 		.word	1073818624
 141 0098 00000000 		.word	.LC0
 142              		.cfi_endproc
 143              	.LFE123:
 145              		.section	.text.MX_TIM2_Init,"ax",%progbits
 146              		.align	2
ARM GAS  /tmp/ccPt3sCt.s 			page 5


 147              		.global	MX_TIM2_Init
 148              		.thumb
 149              		.thumb_func
 151              	MX_TIM2_Init:
 152              	.LFB124:
  83:Src/tim.c     **** /* TIM2 init function */
  84:Src/tim.c     **** void MX_TIM2_Init(void)
  85:Src/tim.c     **** {
 153              		.loc 1 85 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 32
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              	.LCFI5:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 88B0     		sub	sp, sp, #32
 163              	.LCFI6:
 164              		.cfi_def_cfa_offset 40
 165 0004 00AF     		add	r7, sp, #0
 166              	.LCFI7:
 167              		.cfi_def_cfa_register 7
  86:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  87:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  88:Src/tim.c     **** 
  89:Src/tim.c     ****   htim2.Instance = TIM2;
 168              		.loc 1 89 0
 169 0006 204B     		ldr	r3, .L11
 170 0008 4FF08042 		mov	r2, #1073741824
 171 000c 1A60     		str	r2, [r3]
  90:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 172              		.loc 1 90 0
 173 000e 1E4B     		ldr	r3, .L11
 174 0010 0022     		movs	r2, #0
 175 0012 5A60     		str	r2, [r3, #4]
  91:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 176              		.loc 1 91 0
 177 0014 1C4B     		ldr	r3, .L11
 178 0016 0022     		movs	r2, #0
 179 0018 9A60     		str	r2, [r3, #8]
  92:Src/tim.c     ****   htim2.Init.Period = 0;
 180              		.loc 1 92 0
 181 001a 1B4B     		ldr	r3, .L11
 182 001c 0022     		movs	r2, #0
 183 001e DA60     		str	r2, [r3, #12]
  93:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184              		.loc 1 93 0
 185 0020 194B     		ldr	r3, .L11
 186 0022 0022     		movs	r2, #0
 187 0024 1A61     		str	r2, [r3, #16]
  94:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 188              		.loc 1 94 0
 189 0026 184B     		ldr	r3, .L11
 190 0028 0022     		movs	r2, #0
 191 002a 9A61     		str	r2, [r3, #24]
  95:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
ARM GAS  /tmp/ccPt3sCt.s 			page 6


 192              		.loc 1 95 0
 193 002c 1648     		ldr	r0, .L11
 194 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 195 0032 0346     		mov	r3, r0
 196 0034 002B     		cmp	r3, #0
 197 0036 03D0     		beq	.L8
  96:Src/tim.c     ****   {
  97:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 198              		.loc 1 97 0
 199 0038 1448     		ldr	r0, .L11+4
 200 003a 6121     		movs	r1, #97
 201 003c FFF7FEFF 		bl	_Error_Handler
 202              	.L8:
  98:Src/tim.c     ****   }
  99:Src/tim.c     **** 
 100:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 203              		.loc 1 100 0
 204 0040 4FF48053 		mov	r3, #4096
 205 0044 3B61     		str	r3, [r7, #16]
 101:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 206              		.loc 1 101 0
 207 0046 07F11003 		add	r3, r7, #16
 208 004a 0F48     		ldr	r0, .L11
 209 004c 1946     		mov	r1, r3
 210 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 211 0052 0346     		mov	r3, r0
 212 0054 002B     		cmp	r3, #0
 213 0056 03D0     		beq	.L9
 102:Src/tim.c     ****   {
 103:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 214              		.loc 1 103 0
 215 0058 0C48     		ldr	r0, .L11+4
 216 005a 6721     		movs	r1, #103
 217 005c FFF7FEFF 		bl	_Error_Handler
 218              	.L9:
 104:Src/tim.c     ****   }
 105:Src/tim.c     **** 
 106:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 219              		.loc 1 106 0
 220 0060 0023     		movs	r3, #0
 221 0062 7B60     		str	r3, [r7, #4]
 107:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 222              		.loc 1 107 0
 223 0064 0023     		movs	r3, #0
 224 0066 FB60     		str	r3, [r7, #12]
 108:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 225              		.loc 1 108 0
 226 0068 3B1D     		adds	r3, r7, #4
 227 006a 0748     		ldr	r0, .L11
 228 006c 1946     		mov	r1, r3
 229 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 230 0072 0346     		mov	r3, r0
 231 0074 002B     		cmp	r3, #0
 232 0076 03D0     		beq	.L7
 109:Src/tim.c     ****   {
 110:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 233              		.loc 1 110 0
ARM GAS  /tmp/ccPt3sCt.s 			page 7


 234 0078 0448     		ldr	r0, .L11+4
 235 007a 6E21     		movs	r1, #110
 236 007c FFF7FEFF 		bl	_Error_Handler
 237              	.L7:
 111:Src/tim.c     ****   }
 112:Src/tim.c     **** 
 113:Src/tim.c     **** }
 238              		.loc 1 113 0
 239 0080 2037     		adds	r7, r7, #32
 240              	.LCFI8:
 241              		.cfi_def_cfa_offset 8
 242 0082 BD46     		mov	sp, r7
 243              	.LCFI9:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0084 80BD     		pop	{r7, pc}
 247              	.L12:
 248 0086 00BF     		.align	2
 249              	.L11:
 250 0088 00000000 		.word	htim2
 251 008c 00000000 		.word	.LC0
 252              		.cfi_endproc
 253              	.LFE124:
 255              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 256              		.align	2
 257              		.global	HAL_TIM_Base_MspInit
 258              		.thumb
 259              		.thumb_func
 261              	HAL_TIM_Base_MspInit:
 262              	.LFB125:
 114:Src/tim.c     **** 
 115:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 116:Src/tim.c     **** {
 263              		.loc 1 116 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              	.LCFI10:
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 7, -4
 272 0002 85B0     		sub	sp, sp, #20
 273              	.LCFI11:
 274              		.cfi_def_cfa_offset 24
 275 0004 00AF     		add	r7, sp, #0
 276              	.LCFI12:
 277              		.cfi_def_cfa_register 7
 278 0006 7860     		str	r0, [r7, #4]
 117:Src/tim.c     **** 
 118:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 279              		.loc 1 118 0
 280 0008 7B68     		ldr	r3, [r7, #4]
 281 000a 1B68     		ldr	r3, [r3]
 282 000c 124A     		ldr	r2, .L16
 283 000e 9342     		cmp	r3, r2
 284 0010 0CD1     		bne	.L14
ARM GAS  /tmp/ccPt3sCt.s 			page 8


 285              	.LBB2:
 119:Src/tim.c     ****   {
 120:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 121:Src/tim.c     **** 
 122:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 123:Src/tim.c     ****     /* TIM1 clock enable */
 124:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 286              		.loc 1 124 0
 287 0012 124A     		ldr	r2, .L16+4
 288 0014 114B     		ldr	r3, .L16+4
 289 0016 9B69     		ldr	r3, [r3, #24]
 290 0018 43F40063 		orr	r3, r3, #2048
 291 001c 9361     		str	r3, [r2, #24]
 292 001e 0F4B     		ldr	r3, .L16+4
 293 0020 9B69     		ldr	r3, [r3, #24]
 294 0022 03F40063 		and	r3, r3, #2048
 295 0026 FB60     		str	r3, [r7, #12]
 296 0028 FB68     		ldr	r3, [r7, #12]
 297              	.LBE2:
 298 002a 10E0     		b	.L13
 299              	.L14:
 125:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 128:Src/tim.c     ****   }
 129:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 300              		.loc 1 129 0
 301 002c 7B68     		ldr	r3, [r7, #4]
 302 002e 1B68     		ldr	r3, [r3]
 303 0030 B3F1804F 		cmp	r3, #1073741824
 304 0034 0BD1     		bne	.L13
 305              	.LBB3:
 130:Src/tim.c     ****   {
 131:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 132:Src/tim.c     **** 
 133:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 134:Src/tim.c     ****     /* TIM2 clock enable */
 135:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 306              		.loc 1 135 0
 307 0036 094A     		ldr	r2, .L16+4
 308 0038 084B     		ldr	r3, .L16+4
 309 003a DB69     		ldr	r3, [r3, #28]
 310 003c 43F00103 		orr	r3, r3, #1
 311 0040 D361     		str	r3, [r2, #28]
 312 0042 064B     		ldr	r3, .L16+4
 313 0044 DB69     		ldr	r3, [r3, #28]
 314 0046 03F00103 		and	r3, r3, #1
 315 004a BB60     		str	r3, [r7, #8]
 316 004c BB68     		ldr	r3, [r7, #8]
 317              	.L13:
 318              	.LBE3:
 136:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 137:Src/tim.c     **** 
 138:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 139:Src/tim.c     ****   }
 140:Src/tim.c     **** }
 319              		.loc 1 140 0
ARM GAS  /tmp/ccPt3sCt.s 			page 9


 320 004e 1437     		adds	r7, r7, #20
 321              	.LCFI13:
 322              		.cfi_def_cfa_offset 4
 323 0050 BD46     		mov	sp, r7
 324              	.LCFI14:
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0052 5DF8047B 		ldr	r7, [sp], #4
 328              	.LCFI15:
 329              		.cfi_restore 7
 330              		.cfi_def_cfa_offset 0
 331 0056 7047     		bx	lr
 332              	.L17:
 333              		.align	2
 334              	.L16:
 335 0058 002C0140 		.word	1073818624
 336 005c 00100240 		.word	1073876992
 337              		.cfi_endproc
 338              	.LFE125:
 340              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 341              		.align	2
 342              		.global	HAL_TIM_Base_MspDeInit
 343              		.thumb
 344              		.thumb_func
 346              	HAL_TIM_Base_MspDeInit:
 347              	.LFB126:
 141:Src/tim.c     **** 
 142:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 143:Src/tim.c     **** {
 348              		.loc 1 143 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              	.LCFI16:
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 7, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              	.LCFI17:
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              	.LCFI18:
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 144:Src/tim.c     **** 
 145:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 364              		.loc 1 145 0
 365 0008 7B68     		ldr	r3, [r7, #4]
 366 000a 1B68     		ldr	r3, [r3]
 367 000c 0C4A     		ldr	r2, .L21
 368 000e 9342     		cmp	r3, r2
 369 0010 06D1     		bne	.L19
 146:Src/tim.c     ****   {
 147:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 148:Src/tim.c     **** 
 149:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
ARM GAS  /tmp/ccPt3sCt.s 			page 10


 150:Src/tim.c     ****     /* Peripheral clock disable */
 151:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 370              		.loc 1 151 0
 371 0012 0C4A     		ldr	r2, .L21+4
 372 0014 0B4B     		ldr	r3, .L21+4
 373 0016 9B69     		ldr	r3, [r3, #24]
 374 0018 23F40063 		bic	r3, r3, #2048
 375 001c 9361     		str	r3, [r2, #24]
 376 001e 0AE0     		b	.L18
 377              	.L19:
 152:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 153:Src/tim.c     **** 
 154:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 155:Src/tim.c     ****   }
 156:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 378              		.loc 1 156 0
 379 0020 7B68     		ldr	r3, [r7, #4]
 380 0022 1B68     		ldr	r3, [r3]
 381 0024 B3F1804F 		cmp	r3, #1073741824
 382 0028 05D1     		bne	.L18
 157:Src/tim.c     ****   {
 158:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 159:Src/tim.c     **** 
 160:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 161:Src/tim.c     ****     /* Peripheral clock disable */
 162:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 383              		.loc 1 162 0
 384 002a 064A     		ldr	r2, .L21+4
 385 002c 054B     		ldr	r3, .L21+4
 386 002e DB69     		ldr	r3, [r3, #28]
 387 0030 23F00103 		bic	r3, r3, #1
 388 0034 D361     		str	r3, [r2, #28]
 389              	.L18:
 163:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 164:Src/tim.c     **** 
 165:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 166:Src/tim.c     ****   }
 167:Src/tim.c     **** } 
 390              		.loc 1 167 0
 391 0036 0C37     		adds	r7, r7, #12
 392              	.LCFI19:
 393              		.cfi_def_cfa_offset 4
 394 0038 BD46     		mov	sp, r7
 395              	.LCFI20:
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 003a 5DF8047B 		ldr	r7, [sp], #4
 399              	.LCFI21:
 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 003e 7047     		bx	lr
 403              	.L22:
 404              		.align	2
 405              	.L21:
 406 0040 002C0140 		.word	1073818624
 407 0044 00100240 		.word	1073876992
 408              		.cfi_endproc
ARM GAS  /tmp/ccPt3sCt.s 			page 11


 409              	.LFE126:
 411              		.text
 412              	.Letext0:
 413              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 414              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 415              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 416              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 417              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 418              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 419              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 420              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccPt3sCt.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
                            *COM*:0000000000000040 htim1
                            *COM*:0000000000000040 htim2
     /tmp/ccPt3sCt.s:23     .rodata:0000000000000000 $d
     /tmp/ccPt3sCt.s:27     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccPt3sCt.s:32     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccPt3sCt.s:139    .text.MX_TIM1_Init:0000000000000090 $d
     /tmp/ccPt3sCt.s:146    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccPt3sCt.s:151    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccPt3sCt.s:250    .text.MX_TIM2_Init:0000000000000088 $d
     /tmp/ccPt3sCt.s:256    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccPt3sCt.s:261    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccPt3sCt.s:335    .text.HAL_TIM_Base_MspInit:0000000000000058 $d
     /tmp/ccPt3sCt.s:341    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccPt3sCt.s:346    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccPt3sCt.s:406    .text.HAL_TIM_Base_MspDeInit:0000000000000040 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
